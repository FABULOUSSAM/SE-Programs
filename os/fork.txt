
/*
AIM:Create a child process in Linux using the fork system call. From the child process
obtain the process ID of both child and parent by using getpid and getppid system call.
*/
#include <stdio.h>
#include <sys/types.h>
#include <unistd.h>
int main() {
pid_t pid, mypid, myppid;
pid = getpid();
printf("Before fork: Process id is %d\n", pid);
pid = fork();
if (pid < 0)
{
perror("fork() failure\n");
return 1;
}
if (pid == 0)
{
printf("This is child process\n");
mypid = getpid();
myppid = getppid();
printf("Process id is %d and PPID is %d\n", mypid, myppid);
} else
{
sleep(3);
printf("This is parent process\n");
mypid = getpid();
myppid = getppid();
printf("Process id is %d and PPID is %d\n", mypid, myppid);
printf("Newly created process id or child pid is %d\n", pid);
}
return 0;
}
/*
OUTPUT:
sam@BountyHunter:~/Desktop/collage/os$ gcc process.c
sam@BountyHunter:~/Desktop/collage/os$ ./a.out
Before fork: Process id is 26648
This is child process
Process id is 26649 and PPID is 26648
This is parent process
Process id is 26648 and PPID is 26525
Newly created process id or child pid is 26649
*/
